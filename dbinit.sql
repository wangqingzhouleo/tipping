-- MySQL Script generated by MySQL Workbench
-- Tue 13 Jun 2017 19:22:10 AEST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema tipping
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `tipping` ;

-- -----------------------------------------------------
-- Schema tipping
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tipping` DEFAULT CHARACTER SET utf8 ;
USE `tipping` ;

-- -----------------------------------------------------
-- Table `tipping`.`login`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tipping`.`login` (
  `uid` INT(11) NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(32) NOT NULL COMMENT 'lowercase',
  `email` VARCHAR(255) NOT NULL COMMENT 'lowercase',
  `password` VARCHAR(64) NOT NULL COMMENT 'sha256\nlowercase\n',
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `roles` TINYINT(4) NOT NULL DEFAULT 0 COMMENT '0=normal\n1=banned\n2=admin',
  `salt` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`uid`),
  UNIQUE INDEX `uid_UNIQUE` (`uid` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC));


-- -----------------------------------------------------
-- Table `tipping`.`user-profile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tipping`.`user-profile` (
  `uid` INT(11) NOT NULL,
  `sex` ENUM('F', 'M') NULL,
  `imageurl` VARCHAR(45) NULL,
  `birthday` DATE NULL,
  `phone` VARCHAR(15) NULL,
  `location` VARCHAR(45) NULL,
  `firstname` VARCHAR(45) NULL,
  `middlename` VARCHAR(45) NULL,
  `lastname` VARCHAR(45) NULL,
  `displayname` VARCHAR(45) NULL,
  `updated` VARCHAR(45) NOT NULL DEFAULT 'CURRENT_TIMESTAMP',
  PRIMARY KEY (`uid`),
  UNIQUE INDEX `uid_UNIQUE` (`uid` ASC),
  CONSTRAINT `profile-uid`
    FOREIGN KEY (`uid`)
    REFERENCES `tipping`.`login` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tipping`.`user-statics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tipping`.`user-statics` (
  `uid` INT(11) NOT NULL,
  `points` INT(11) NULL,
  PRIMARY KEY (`uid`),
  UNIQUE INDEX `uid_UNIQUE` (`uid` ASC),
  CONSTRAINT `statistics-uid`
    FOREIGN KEY (`uid`)
    REFERENCES `tipping`.`login` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tipping`.`badage-name`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tipping`.`badage-name` (
  `bid` TINYINT(4) NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`bid`),
  UNIQUE INDEX `bid_UNIQUE` (`bid` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tipping`.`badage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tipping`.`badage` (
  `uid` INT(11) NOT NULL,
  `bid` TINYINT(4) NOT NULL,
  PRIMARY KEY (`uid`),
  INDEX `bid_idx` (`bid` ASC),
  CONSTRAINT `badage-uid`
    FOREIGN KEY (`uid`)
    REFERENCES `tipping`.`login` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `badage-bid`
    FOREIGN KEY (`bid`)
    REFERENCES `tipping`.`badage-name` (`bid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tipping`.`game-type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tipping`.`game-type` (
  `type-id` TINYINT(4) NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`type-id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tipping`.`game`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tipping`.`game` (
  `id` SMALLINT(6) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `type` TINYINT(4) NOT NULL,
  `start` TIMESTAMP NULL,
  `end` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_game_1_idx` (`type` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `fk_game_1`
    FOREIGN KEY (`type`)
    REFERENCES `tipping`.`game-type` (`type-id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tipping`.`bet`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tipping`.`bet` (
  `id` INT(11) NOT NULL,
  `game-id` SMALLINT(6) NOT NULL,
  `player0` INT(11) NOT NULL,
  `player1` INT(11) NOT NULL,
  `amount` INT(11) NOT NULL,
  `winner` INT(11) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `bet-id_UNIQUE` (`id` ASC),
  INDEX `game-id_idx` (`game-id` ASC),
  INDEX `uid_idx` (`player0` ASC),
  INDEX `fk_bet_1_idx` (`player1` ASC),
  CONSTRAINT `bet-game-id`
    FOREIGN KEY (`game-id`)
    REFERENCES `tipping`.`game` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `bet-uid`
    FOREIGN KEY (`player0`)
    REFERENCES `tipping`.`login` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_bet_1`
    FOREIGN KEY (`player1`)
    REFERENCES `tipping`.`login` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tipping`.`friend`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tipping`.`friend` (
  `uid1` INT(11) NOT NULL,
  `uid2` INT(11) NOT NULL,
  `timestamp` TIMESTAMP NOT NULL,
  `status` TINYINT(4) NOT NULL COMMENT 'false = are no longer friend',
  `action-user` INT(11) NOT NULL,
  PRIMARY KEY (`uid1`, `uid2`),
  UNIQUE INDEX `uid1_UNIQUE` (`uid1` ASC),
  UNIQUE INDEX `uid2_UNIQUE` (`uid2` ASC),
  INDEX `fk_friend_2_idx` (`action-user` ASC),
  CONSTRAINT `friend-uid`
    FOREIGN KEY (`uid1`)
    REFERENCES `tipping`.`login` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_friend_1`
    FOREIGN KEY (`uid2`)
    REFERENCES `tipping`.`login` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_friend_2`
    FOREIGN KEY (`action-user`)
    REFERENCES `tipping`.`login` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tipping`.`item-name`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tipping`.`item-name` (
  `id` SMALLINT(6) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `type` TINYINT(4) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `item-id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tipping`.`own-items`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tipping`.`own-items` (
  `uid` INT(11) NOT NULL,
  `item-id` SMALLINT(6) NOT NULL,
  `quant` TINYINT(4) NOT NULL,
  PRIMARY KEY (`uid`),
  INDEX `id_idx` (`item-id` ASC),
  CONSTRAINT `own-item-id`
    FOREIGN KEY (`item-id`)
    REFERENCES `tipping`.`item-name` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `own-item-uid`
    FOREIGN KEY (`uid`)
    REFERENCES `tipping`.`login` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tipping`.`reset-password`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tipping`.`reset-password` (
  `uid` INT(11) NOT NULL,
  `token` VARCHAR(45) NULL,
  `expired` TIMESTAMP NULL,
  PRIMARY KEY (`uid`),
  UNIQUE INDEX `uid_UNIQUE` (`uid` ASC),
  CONSTRAINT `fk_reset-password_1`
    FOREIGN KEY (`uid`)
    REFERENCES `tipping`.`login` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
